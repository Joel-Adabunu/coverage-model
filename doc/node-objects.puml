@startuml node-objects

skinparam object {
    BackgroundColor #yellow
    BorderColor #a0a0a0
    BorderColor black
    ArrowColor black
    FontName  Arial Unicode MS
    FontSize 20
}

skinparam classFontSize 24
skinparam classAttributeIconSize 0
skinparam defaultFontSize 20

skinparam ArrowColor black
skinparam ArrowThickness 2

skinparam linetype ortho

hide circle

object "nm : CoverageNode" as nm {
    metric: CoverageMetric {readOnly} = MODULE
    name: String {readOnly} = "coverage-model"
    children: List<CoverageNode> {readOnly} = childrenModule
    leaves: List<CoverageLeaf> {redOnly} = leavesModule
    parent: CoverageNode = null
}

object "MODULE : CoverageMetric" as MODULE {
    name: String {readOnly} = "Module"
    order: int {readOnly} = -10
    leaf: boolean {readOnly} = false
}

object "childrenModule : ArrayList<CoverageNode>" as childrenModule {
    elementData: Object[] = [np]
    size: int = 1
}

object "leavesModule : ArrayList<CoverageLeaf>" as leavesModule {
    elementData: Object[] = []
    size: int = 0
}


object "np : PackageCoverageNode" as np {
    metric: CoverageMetric {readOnly} = PACKAGE
    name: String {readOnly} = "edu.hm.hafner.coverage"
    children: List<CoverageNode> {readOnly} = childrenPackage
    leaves: List<CoverageLeaf> {readOnly} = leavesPackage
    parent: CoverageNode = nm
}

object "PACKAGE : CoverageMetric" as PACKAGE {
    name: String {readOnly} = "Package"
    order: int {readOnly} = 1
    leaf: boolean {readOnly} = false
}

object "childrenPackage : ArrayList<CoverageNode>" as childrenPackage {
    elementData: Object[] = [n0]
    size: int = 1
}

object "leavesPackage : ArrayList<CoverageLeaf>" as leavesPackage {
    elementData: Object[] = []
    size: int = 0
}


object "n0 : FileCoverageNode" as n0 {
    metric: CoverageMetric {readOnly} = FILE
    name: String {readOnly} = "Coverage.java"
    children: List<CoverageNode> {readOnly} = children1
    leaves: List<CoverageLeaf> {readOnly} = leaves1
    parent: CoverageNode = np
}

object "FILE : CoverageMetric" as FILE {
    name: String {readOnly} = "File"
    order: int {readOnly} = 2
    leaf: boolean {readOnly} = false
}

object "children1 : ArrayList<CoverageNode>" as children1 {
    elementData: Object[] = [n1]
    size: int = 1
}

object "leaves1 : ArrayList<CoverageLeaf>" as leaves1 {
    elementData: Object[] = []
    size: int = 0
}

object "n1 : CoverageNode" as n1 {
    metric: CoverageMetric {readOnly} = CLASS
    name: String {readOnly} = "Coverage.class"
    children: List<CoverageNode> {readOnly} = l1
    leaves: List<CoverageLeaf> {readOnly} = l2
    parent: CoverageNode = n0
}

object "CLASS : CoverageMetric" as CLASS {
    name: String {readOnly} = "Class"
    order: int {readOnly} = 3
    leaf: boolean {readOnly} = false
}

object "l1 : ArrayList<CoverageNode>" as l1 {
    elementData: Object[] = [n2, n3]
    size: int = 3
}

object "l2 : ArrayList<CoverageLeaf>" as l2 {
    elementData: Object[] = []
    size: int = 0
}

object "n2 : MethodCoverageNode" as n2 {
    metric: CoverageMetric {readOnly} = METHOD
    name: String {readOnly} = "equals"
    children: List<CoverageNode> {readOnly} = l3
    leaves: List<CoverageLeaf> {readOnly} = l4
    parent: CoverageNode = n1
    lineNumber: int {readOnly} = 171
}

object "METHOD : CoverageMetric" as METHOD {
    name: String {readOnly} = "Method"
    order: int {readOnly} = 4
    leaf: boolean {readOnly} = false
}

object "l3 : ArrayList<CoverageNode>" as l3 {
    elementData: Object[] = []
    size: int = 0
}

object "l4 : ArrayList<CoverageLeaf>" as l4 {
    elementData: Object[] = [line1, branch1]
    size: int = 2
}

object "line1 : CoverageLeaf" as line1 {
    metric: CoverageMetric {readOnly} = LINE
    coverage: Coverage {readOnly} = c1
}

object "branch1 : CoverageLeaf" as branch1 {
    metric: CoverageMetric {readOnly} = BRANCH
    coverage: Coverage {readOnly} = c2
}

object "n3 : MethodCoverageNode" as n3 {
    metric: CoverageMetric {readOnly} = METHOD
    name: String {readOnly} = "hashCode"
    children: List<CoverageNode> {readOnly} = l5
    leaves: List<CoverageLeaf> {readOnly} = l6
    parent: CoverageNode = n1
    lineNumber: int {readOnly} = 183
}

object "LINE : CoverageMetric" as LINE {
    name: String {readOnly} = "Line"
    order: int {readOnly} = 10
    leaf: boolean {readOnly} = true
}

object "c1 : Coverage" as c1 {
    covered: int {readOnly} = 6
    missed: int {readOnly} = 0
}

object "BRANCH : CoverageMetric" as BRANCH {
    name: String {readOnly} = "Branch"
    order: int {readOnly} = 12
    leaf: boolean {readOnly} = true
}

object "c2 : Coverage" as c2 {
    covered: int {readOnly} = 2
    missed: int {readOnly} = 0
}

object "l5 : ArrayList<CoverageNode>" as l5 {
    elementData: Object[] = []
    size: int = 0
}

object "l6 : ArrayList<CoverageLeaf>" as l6 {
    elementData: Object[] = [line2, branch2]
    size: int = 2
}

object "line2 : CoverageLeaf" as line2 {
    metric: CoverageMetric {readOnly} = LINE
    coverage: Coverage {readOnly} = c3
}

object "branch2 : CoverageLeaf" as branch2 {
    metric: CoverageMetric {readOnly} = BRANCH
    coverage: Coverage {readOnly} = c4
}

object "c3 : Coverage" as c3 {
    covered: int {readOnly} = 1
    missed: int {readOnly} = 0
}

object "c4 : Coverage" as c4 {
    covered: int {readOnly} = 1
    missed: int {readOnly} = 0
}

nm o-- MODULE
nm o-- childrenModule
nm o-- leavesModule
np o-u- nm
np <-u- childrenModule
np o-- PACKAGE
np o-- childrenPackage
np o-- leavesPackage
n0 o-u- np
n0 <-u- childrenPackage
n0 o-- FILE
n0 o-- children1
n0 o-- leaves1
n1 o-u- n0
n1 <-u- children1
n1 o-- CLASS
n1 o-- l1
n1 o-- l2
n2 <-u- l1
n3 <-u- l1
n3 o-u- n1
n2 o-- METHOD
n2 o-- l3
n2 o-- l4
n2 o-u- n1
line1 <-u- l4
branch1 <-u- l4
line1 o-- LINE
line1 o-- c1
branch1 o-- BRANCH
branch1 o-- c2
n3 o-- l5
n3 o-- l6
n3 o-- METHOD
line2 <-u- l6
branch2 <-u- l6
line2 o-- LINE
line2 o-- c3
branch2 o-- BRANCH
branch2 o-- c4


@enduml
